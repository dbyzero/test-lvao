version: '3.7'

services:
    nginx:
        build:
            context: ./nginx/
            args:
                - APP_DOMAIN_NAME=${APP_DOMAIN_NAME}
                - API_DOMAIN_NAME=${API_DOMAIN_NAME}
        ports:
            - "${APP_PORT}:80"
        depends_on:
            - api
        env_file:
            - .env

    app:
        build:
            context: ./app
            dockerfile: ./Dockerfile
        volumes:
            - ./app:/var/www

    api:
        build:
            context: ./api
            dockerfile: ./Dockerfile
        depends_on:
            - db
            - redis
        env_file:
            - ./.env
        volumes:
            - ./api:/code
        command: python manage.py runserver 0:8000

    worker:
        build:
            context: ./api
            dockerfile: ./Dockerfile
        depends_on:
            - db
            - api
        env_file:
            - ./.env
        volumes:
            - ./api:/code
        command: celery -A projects worker -l INFO

    beat:
        build:
            context: ./api
            dockerfile: ./Dockerfile
        depends_on:
            - db
            - api
        env_file:
            - ./.env
        volumes:
            - ./api:/code
        command: celery -A projects beat -l INFO

    db:
        ports:
            - "25432:5432"
        image: postgres:14
        volumes:
            - volume-db:/var/lib/postgresql/data
        environment:
            - POSTGRES_USER=${POSTGRES_USER}
            - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
            - POSTGRES_PORT=${POSTGRES_PORT}
            - PGDATA=/var/lib/postgresql/data

    redis:
        init: true
        image: redis:6-alpine
        volumes:
            - volume-redis:/data
        env_file:
            - .env

volumes:
    volume-db:
        name: ${VOLUME_DB}
    volume-redis:
        name: ${VOLUME_REDIS}
